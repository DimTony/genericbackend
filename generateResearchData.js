const { faker } = require('@faker-js/faker');
const fs = require('fs');

const institutions = [
  'University of Melbourne',
  'French National Institute of Health and Medical Research (Inserm)',
  "Queen's University of Belfast",
  'University of Birmingham',
  'University of Queensland',
  'University of Surrey',
  'Veneto Institute of Molecular Medicine',
  'Edith Cowan University',
  'Leiden University Medical Center',
  'Neuroscience Research Australia',
  'University of Regensburg',
  'Princess Alexandra Hospital',
  'Northumbria University',
  'Al-Quds University',
  'Telethon Institute of Genetics and Medicine',
  'VIB-Flemish Institute for Biotechnology',
  'University of Wollongong',
  "Research Institute at Nationwide Children's Hospital",
  'University of Aberdeen',
  'Bispebjerg and Frederiksberg Hospital',
  'University of Canberra',
  'University of Ioannina',
  'University of Sydney',
  'Consorcio Centro de Investigación Biomédica en Red',
  'CESP',
  'Dana-Farber Cancer Institute',
  'Universidad Europea de Madrid',
  "Murdoch Children's Research Institute",
  'University of Zurich',
  'Italian National Council of Research',
  'Umea University',
  'University of Marburg',
  'Baker Heart and Diabetes Institute',
  'Bjørknes University College',
  'Cancer Council Victoria',
  'Cardiff University',
  'Christian-Albrechts-University',
  'Copenhagen University Hospital',
  'Danish Cancer Society Research Center',
  'Department of Public Health and Caring Sciences',
  'Flinders University',
  'Frederiksberg Hospital',
  'German Cancer Research Center (DKFZ)',
  'Harvard School of Public Health',
  'IDIAP Jordi Gol',
  'IDIBELL',
  'Imperial College London',
  'Institute for Research in Biomedicine',
  'International Agency for Research on Cancer (IARC)',
  'Loma Linda University',
  'Lund University',
  'Maastricht University',
  'National Cancer Centre (Japan)',
  'Norwegian University of Science and Technology (NTNU)',
  'Queensland Institute of Medical Research',
  'Queensland University of Technology',
  'Radboud University Medical Center',
  'Spanish National Cancer Research Centre (CNIO)',
  'The Chinese University of Hong Kong',
  'University Medical Centre Utrecht (UMCU)',
  'University of Bath',
  'University of Bonn',
  'University of Bristol',
  'University of Dublin',
  'University of Hong Kong',
  'University of Ioannina School of Medicine',
  'University of Leeds',
  'University of Leicester',
  'University of Manchester',
  'University of Newcastle',
  'University of Oxford',
  'University of Sheffield',
  'University of Southampton',
  'UNSW Sydney',
  'Victoria University',
  'Wageningen University and Research Centre',
];

const countries = [
  'Italy',
  'Palestine',
  'Belgium',
  'Switzerland',
  'Australia',
  'Denmark',
  'France',
  'Germany',
  'Greece',
  'Hong Kong',
  'Ireland',
  'Japan',
  'Netherlands',
  'Norway',
  'Spain',
  'Sweden',
  'United Kingdom',
  'United States',
];

const cancerTypes = [
  'Stomach cancer',
  'Bone cancer',
  'Childhood cancer',
  'Neuroendocrine tumours',
  'Bladder cancer',
  'Blood cancers',
  'Breast cancer',
  'Cancer-related outcomes',
  'Cervical cancer',
  'Colorectal cancer',
  'Combination of cancers',
  'Endometrial cancer',
  'Head-Neck cancer',
  'Kidney cancer',
  'Liver cancer',
  'Lung cancer',
  'Nasopharyngeal cancer',
  'Oesophageal cancer',
  'Ovarian cancer',
  'Pancreatic cancer',
  'Prostate cancer',
  'Skin cancer',
];

const statuses = ['ongoing', 'completed'];

const generateData = () => {
  let data = [];
  for (let i = 0; i < 50; i++) {
    data.push({
      title: faker.lorem.sentence(),
      institution: faker.helpers.arrayElement(institutions),
      country: faker.helpers.arrayElement(countries),
      cancerType: faker.helpers.arrayElement(cancerTypes),
      status: faker.helpers.arrayElement(statuses),
      description: faker.lorem.paragraph(),
      startDate: faker.date.past(),
      endDate:
        faker.helpers.arrayElement(statuses) === 'completed'
          ? faker.date.recent()
          : null,
    });
  }
  return data;
};

fs.writeFileSync('sampleData.json', JSON.stringify(generateData(), null, 2));
console.log('Sample data generated successfully');
